{"version":3,"sources":["components/Header.js","components/Banner.js","components/Feature.js","components/NavItems.js","samples/simple-chart/index.js","samples/3d-pie-chart/index.js","samples/column-line-area-combi-chart/index.js","samples/fetch-data-from-json-url/index.js","samples/fetch-data-from-xml-url/index.js","samples/update-chart-data/index.js","samples/update-chart-attributes/index.js","samples/trigger-events-from-chart/index.js","samples/percentage-calculation/index.js","samples/client-side-exporting/index.js","samples/drill-down/index.js","samples/simple-gauge/index.js","samples/simple-map/index.js","samples/apply-theme/index.js","samples/change-chart-type-runtime/index.js","samples/use-annotations/index.js","samples/lifecycle-events/index.js","samples/special-events/index.js","samples/dynamic-event-listening/index.js","samples/slice-data-plots/index.js","samples/responsive-charts/index.js","samples/update-chart-attribute-through-method/index.js","samples/simple-timeseries/index.js","samples/multivariate-timeseries/index.js","samples/column-chart-time-axis/index.js","samples/interactive-candlestick-chart/index.js","samples/annotating-data/index.js","samples/single-event-overlay/index.js","samples/multi-series-time-axis/index.js","samples/area-time-axis/index.js","samples/date-event-overlay/index.js","samples/adding-reference-line/index.js","components/Samples.js","components/Info.js","components/Footer.js","components/Info/FusionChartsInfo.js","components/App.js","registerServiceWorker.js","index.js","assets/images/fc-logo.svg","assets/images/react.svg","assets/images/fc-min-logo.svg"],"names":["Header","react_default","a","createElement","id","className","href","target","src","siteLogo","width","height","alt","Component","Banner","reactLogo","FCLogo","React","Feature","NavItems","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","config","index","activePath","_this2","NavLink","activeClassName","to","sampleRouteMapping","onClick","tabClicked","isActive","match","location","checkActiveTab","style","display","justifyContent","sampleProps","title","Number","type","desc","ReactFC","fcRoot","FusionCharts","TimeSeries","Charts","FusionTheme","chartConfigs","dataFormat","dataSource","data","Chart","ReactFC_default","MSCombi2D","Column2D","updateData","bind","assertThisInitialized","Math","round","random","prevDs","assign","value","getRandomNumber","setState","chart","renderComplete","changeBackgroundColor","changeCaptionTextAlignment","resetChart","setChartAttribute","onRender","actualValue","message","dataplotrollover","dataplotrollout","eventObj","dataObj","categoryLabel","displayValue","fcEvent-dataplotRollOver","fcEvent-dataplotRollOut","padding","background","total","toFixed","chartData","getJSONData","reduce","p","c","chart1Configs","data1","chart2Configs","data2","exportChart","e","batchExport","exportFormat","alterChart","configureLink","overlayButton","fontColor","bgColor","borderColor","Widgets","Maps","World","GammelTheme","CandyTheme","ZuneTheme","OceanTheme","CarbonTheme","currentVal","radioHandler","currentTarget","onChange","checked","chartType","beforeDataUpdate","dataUpdated","drawComplete","newMessage","slice","push","fcEvent-beforeDataUpdate","fcEvent-dataUpdated","fcEvent-drawComplete","fcEvent-renderComplete","PowerCharts","dataplotDragEnd","prevValue","formatNumber","startValue","curValue","endValue","labelYear","args","categories","category","dataIndex","label","datasetName","fcEvent-dataplotDragEnd","enabled","trackPlotClick","dataPlotClick","addEventListener","removeEventListener","disabled","sliceClicked","options","map","slicePlotItem","isSliced","fcEvent-dataplotClick","parseInt","resizeTo","changeCaption","changeXAxis","changeYAxis","keys","i","jsonify","res","json","dataFetch","fetch","then","schemaFetch","SimpleTimeseries","timeseriesDs","renderAt","caption","text","yAxis","plot","createDataTable","Promise","all","schema","fusionTable","DataStore","MultivariateTimeSeries","subcaption","min","max","ColumnChartTimeAxis","InteractiveCandlestickChart","open","high","low","close","AnnotatingData","subCaption","format","suffix","dataMarker","seriesName","time","identifier","timeFormat","tooltext","SingleEventOverlay","xAxis","timemarker","start","marker","fill","MultiSeriesTimeAxis","series","prefix","AreaTimeAxis","showLegend","DateEventOverlay","end","AddingReferenceLine","font-size","referenceLine","tabSize","smartIndent","lineNumbers","readOnly","theme","mode","viewportMargin","Infinity","Samples","locationArr","window","pathname","split","values","findIndex","element","length","editorText","button","showModal","url","modal","event","modalEle","document","getElementById","contains","code","BrowserRouter","basename","directory","modalToggle","concat","key","components_NavItems","Route","exact","path","component","SimpleChart","Pie3DChart","ColumnLineAreaCombiChart","FetchDataFromJsonUrl","FetchDataFromXmlUrl","UpdateChartData","UpdateChartAttributes","TriggerEventsFromChart","PercentageCalculation","ClientSideExporting","DrillDown","SimpleGauge","SimpleMap","ChangeChartTypeRuntime","UseAnnotations","LifecycleEvents","SpecialEvents","DynamicEventListening","SliceDataPlots","ResponsiveCharts","UCATM","ApplyTheme","SimpleTimeSeries","role","aria-label","buttonClicked","react_codemirror2","chartJSON","xAxisName","yAxisName","numberSuffix","code1","JSON","stringify","code2","numbersuffix","includevalueinlabels","labelsepchar","entityFillHoverColor","colorrange","minvalue","gradient","color","maxvalue","showLabel","code3","code4","Codemirror_default","Footer","App","components_Header","components_Banner","components_Feature","components_Samples","Info","components_Footer","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_components_App","URL","process","origin","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.525ca713.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport siteLogo from '../assets/images/fc-logo.svg';\n\nclass Header extends Component {\n  render () {\n    return (\n        <nav id=\"navbar\" className=\"navbar navbar-light navbar-expand-lg bg-light\">\n            <a href=\"https://www.fusioncharts.com\" target=\"_blank\" className=\"navbar-brand active\">\n                <img src={siteLogo} width=\"149\" height=\"27\" alt=\"FusionCharts\" className=\"img-circle\" />\n            </a>\n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                    <a className=\"header-link\" href=\"//github.com/fusioncharts/react-fusioncharts-component\" target=\"_blank\">GitHub Repository</a>\n                </li>\n            </ul>\n        </nav>\n    )\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport reactLogo from '../assets/images/react.svg';\nimport FCLogo from '../assets/images/fc-min-logo.svg';\n\nclass Banner extends React.Component {\n  render() {\n    return (\n      <div className=\"content-container\">\n        <div className=\"jumbotron banner-bg-3 heroContainer fixed-bg home-banner pl-2 pr-2 pl-sm-3 pr-sm-3 pl-md-3 pr-md-3 pl-lg-6 pr-lg-6 pb-4 pt-4\">\n          <div className=\"container container-1440 info-wrapper\">\n            <div className=\"row\">\n              <div className=\"col-md-8 offset-md-2\">\n                <div className=\"h1 text-white text-center\">\n                  <img id=\"lang-logo\" className=\"img-valign\" src={reactLogo} width=\"40\" height=\"40\" alt=\"React\" />\n                  <img id=\"fc-logo\" className=\"img-valign\" src={FCLogo} width=\"40\" height=\"40\" alt=\"FusionCharts\" />\n                  <span className=\"title pl-1\">React-FusionCharts</span>\n                </div>\n                <div className=\"h3 text-white text-center mt-2\">\n                  <span className=\"sub-title primary\">\n                      An easy-to-use, lightweight React component for the FusionCharts JavaScript Charting Library\n                  </span>\n                </div>\n                <div className=\"p text-white text-center mt-2\">\n                  <span className=\"sub-title secondary\">\n                    The React-FusionCharts component lets you easily include FusionCharts in your React projects and add interactive charts to your React applications.\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Banner;\n","import React from 'react';\n\nclass Feature extends React.Component {\n  render() {\n    return (\n      <div className=\"container container-1200 info-wrapper pb-3\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"h2 mt-2\">Features</div>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <ul className=\"feature-list\">\n                  <li>\n                    <span>\n                      <i className=\"icn-inline icn-success fc_select\"></i>\n                    </span>\n                    <div>Adds a chart using just one single component.</div>\n                  </li>\n                  <li>\n                    <span>\n                      <i className=\"icn-inline icn-success fc_select\"></i>\n                    </span>\n                    <div>Auto-updates the chart object when the data source is modified.</div>\n                  </li>\n                  <li>\n                    <span>\n                      <i className=\"icn-inline icn-success fc_select\"></i>\n                    </span>\n                    <div>Adds a chart from a JSON URL, from a XML URL, or using props Binding.</div>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"col-md-6\">\n                <ul className=\"feature-list\">\n                  <li>\n                    <span>\n                      <i className=\"icn-inline icn-success fc_select\"></i>\n                    </span>\n                    <div>Allows you to enable interactivity between Javascript charts</div>\n                  </li>\n                  <li>\n                    <span>\n                      <i className=\"icn-inline icn-success fc_select\"></i>\n                    </span>\n                    <div>Offers advanced control by giving you access to the complete FusionCharts object (containing the chart configuration).</div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Feature;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass NavItems extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      config: this.props.config,\n      index: this.props.index,\n      activePath: this.props.activePath\n    };\n  }\n  render() {\n    return (\n      <NavLink\n        className=\"nav-item\"\n        activeClassName=\"selected\"\n        to={this.state.config.sampleRouteMapping[this.state.index]}\n        onClick={() => this.props.tabClicked(this.state.index)}\n        isActive={(match, location) =>\n          this.props.checkActiveTab(match, location, this.state.index)\n        }\n      >\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <div className=\"h5\">\n            {this.state.config.sampleProps[this.state.index].title}\n          </div>\n          <div\n            className={\n              this.state.activePath === Number(this.state.index)\n                ? 'h5 badge badge-normal'\n                : 'h5 badge badge-normal'\n            }\n          >\n            {this.state.config.sampleProps[this.state.index].type ===\n            'FusionTime'\n              ? this.state.config.sampleProps[this.state.index].type\n              : null}\n          </div>\n        </div>\n        <div className=\"p item-desc\">\n          {this.state.config.sampleProps[this.state.index].desc}\n        </div>\n      </NavLink>\n    );\n  }\n}\n\nexport default NavItems;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Charts from 'fusioncharts/fusioncharts.charts';\nimport TimeSeries from 'fusioncharts/fusioncharts.timeseries';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, TimeSeries, Charts, FusionTheme);\n\nconst chartConfigs = {\n  type: 'column2d',\n  width: '100%',\n  height: '100%',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  componentDidUpdate() {}\n\n  render() {\n    return <ReactFC {...chartConfigs} />;\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Charts from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\nconst chartConfigs = {\n  type: 'Pie3D',\n  width: '100%',\n  height: '100%',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  render() {\n    return <ReactFC {...chartConfigs} />;\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts/core';\nimport MSCombi2D from 'fusioncharts/viz/mscombi2d';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/es/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, MSCombi2D, FusionTheme);\n\nconst chartConfigs = {\n  type: 'mscombi2d',\n  width: '100%',\n  height: '100%',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  render () {\n    return (\n      <ReactFC {...chartConfigs} />\n    )\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Column2D from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nconst chartConfigs = {\n  type: 'column2d',\n  width: '100%',\n  height: '100%',\n  dataFormat: 'jsonurl',\n  dataSource: './data/data.json'\n};\n\nclass Chart extends Component {\n  render() {\n    return <ReactFC {...chartConfigs} />;\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Column2D from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nconst chartConfigs = {\n  type: 'column2d',\n  width: '100%',\n  height: '100%',\n  dataFormat: 'xmlurl',\n  dataSource: './data/data.xml'\n};\n\nclass Chart extends Component {\n  render() {\n    return <ReactFC {...chartConfigs} />;\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Column2D from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nconst chartConfigs = {\n  type: 'column2d',\n  width: '100%',\n  height: '80%',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = chartConfigs;\n\n    this.updateData = this.updateData.bind(this);\n  }\n\n  getRandomNumber() {\n    var max = 290,\n      min = 30;\n    return Math.round((max - min) * Math.random() + min);\n  }\n\n  updateData() {\n    const prevDs = Object.assign({}, this.state.dataSource);\n    prevDs.data[2].value = this.getRandomNumber();\n    prevDs.data[3].value = this.getRandomNumber();\n    this.setState({\n      dataSource: prevDs\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactFC {...this.state} />\n        <center>\n          <button\n            className=\"btn btn-outline-secondary btn-sm\"\n            onClick={this.updateData}\n          >\n            Change Chart Data\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Column2D from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nconst chartConfigs = {\n  type: 'column2d',\n  width: '100%',\n  height: '80%',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chart: {}\n    };\n\n    this.renderComplete = this.renderComplete.bind(this);\n    this.changeBackgroundColor = this.changeBackgroundColor.bind(this);\n    this.changeCaptionTextAlignment = this.changeCaptionTextAlignment.bind(\n      this\n    );\n    this.resetChart = this.resetChart.bind(this);\n  }\n\n  renderComplete(chart) {\n    this.setState({ chart });\n  }\n\n  changeBackgroundColor() {\n    this.state.chart.setChartAttribute('bgColor', '#efefef');\n  }\n\n  changeCaptionTextAlignment() {\n    this.state.chart.setChartAttribute('captionAlignment', 'left');\n  }\n\n  resetChart() {\n    this.state.chart.setChartAttribute('bgColor', null);\n    this.state.chart.setChartAttribute('captionAlignment', null);\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactFC {...chartConfigs} onRender={this.renderComplete} />\n        <center>\n          <button\n            className=\"btn btn-outline-secondary btn-sm\"\n            onClick={this.changeBackgroundColor}\n          >\n            Change Background\n          </button>\n          <button\n            className=\"btn btn-outline-secondary btn-sm\"\n            onClick={this.changeCaptionTextAlignment}\n          >\n            Change Caption Alignment\n          </button>\n          <button\n            className=\"btn btn-outline-secondary btn-sm\"\n            onClick={this.resetChart}\n          >\n            Reset\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Column2D from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nconst chartConfigs = {\n  type: 'column2d',\n  width: '100%',\n  height: '80%',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      actualValue: 'Hover on the plot to see the value along with the label',\n      message: 'Hover on the plot to see the value along with the label'\n    };\n\n    this.dataplotrollover = this.dataplotrollover.bind(this);\n    this.dataplotrollout = this.dataplotrollout.bind(this);\n  }\n\n  dataplotrollover(eventObj, dataObj) {\n    this.setState({\n      message: [\n        'You are currently hovering over ',\n        <strong>{dataObj.categoryLabel}</strong>,\n        ' whose value is ',\n        <strong>{dataObj.displayValue}</strong>\n      ]\n    });\n  }\n\n  dataplotrollout(eventObj, dataObj) {\n    this.setState({\n      message: this.state.actualValue\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactFC\n          {...chartConfigs}\n          fcEvent-dataplotRollOver={this.dataplotrollover}\n          fcEvent-dataplotRollOut={this.dataplotrollout}\n        />\n        <p style={{ padding: '10px', background: '#f5f2f0' }}>\n          {this.state.message}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Column2D from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nconst chartConfigs = {\n  type: 'column2d',\n  width: '100%',\n  height: '80%',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      actualValue:\n        'Hover on the plot to see the percentage along with the label',\n      message: 'Hover on the plot to see the value along with the label'\n    };\n\n    this.dataplotrollover = this.dataplotrollover.bind(this);\n    this.dataplotrollout = this.dataplotrollout.bind(this);\n    this.renderComplete = this.renderComplete.bind(this);\n  }\n\n  dataplotrollover(eventObj, dataObj) {\n    const value = ((dataObj.value / this.state.total) * 100).toFixed(2);\n    this.setState({\n      message: [\n        <strong>{dataObj.categoryLabel}</strong>,\n        ' is ',\n        <strong>{value}</strong>,\n        '% of top 8 oil reserve countries'\n      ]\n    });\n  }\n\n  dataplotrollout(eventObj, dataObj) {\n    this.setState({\n      message: this.state.actualValue\n    });\n  }\n\n  renderComplete(chart) {\n    const chartData = chart.getJSONData();\n    this.setState({\n      total: chartData.data.reduce((p, c) => p + Number(c.value), 0)\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactFC\n          {...chartConfigs}\n          onRender={this.renderComplete}\n          fcEvent-dataplotRollOver={this.dataplotrollover}\n          fcEvent-dataplotRollOut={this.dataplotrollout}\n        />\n        <p style={{ padding: '10px', background: '#f5f2f0' }}>\n          {this.state.message}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Column2D from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data1 from './data1.json';\nimport data2 from './data2.json';\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nconst chart1Configs = {\n  type: 'column2d',\n  width: 700,\n  height: 400,\n  dataFormat: 'json',\n  dataSource: data1\n};\nconst chart2Configs = {\n  type: 'stackedcolumn2d',\n  width: 600,\n  height: 500,\n  dataFormat: 'json',\n  dataSource: data2\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.exportChart = this.exportChart.bind(this);\n  }\n\n  exportChart(e) {\n    FusionCharts.batchExport({\n      exportFormat: 'pdf'\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactFC {...chart1Configs} />\n        <ReactFC {...chart2Configs} />\n        <center>\n          <button\n            className=\"btn btn-outline-secondary btn-sm\"\n            onClick={this.exportChart}\n          >\n            Export both charts as a single PDF\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Column2D from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nconst chartConfigs = {\n  type: 'column2d',\n  width: '100%',\n  height: '100%',\n  dataFormat: 'json',\n  dataSource: data\n};\nconst alterChart = chart => {\n  chart.configureLink(\n    {\n      type: 'pie2d',\n      width: '500',\n      overlayButton: {\n        message: 'Back',\n        fontColor: '880000',\n        bgColor: 'FFEEEE',\n        borderColor: '660000'\n      }\n    },\n    0\n  );\n};\n\nclass Chart extends Component {\n  render() {\n    return <ReactFC {...chartConfigs} onRender={alterChart} />;\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Widgets from 'fusioncharts/fusioncharts.widgets';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, Widgets, FusionTheme);\n\nconst chartConfigs = {\n  type: 'angulargauge',\n  width: '100%',\n  height: '100%',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  render() {\n    return <ReactFC {...chartConfigs} />;\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Maps from 'fusioncharts/fusioncharts.maps';\nimport World from 'fusioncharts/maps/fusioncharts.world';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, Maps, World, FusionTheme);\n\nconst chartConfigs = {\n  type: 'world',\n  width: '100%',\n  height: '100%',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  render() {\n    return <ReactFC {...chartConfigs} />;\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Column2D from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nimport GammelTheme from 'fusioncharts/themes/fusioncharts.theme.gammel';\nimport CandyTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\nimport ZuneTheme from 'fusioncharts/themes/fusioncharts.theme.zune';\nimport OceanTheme from 'fusioncharts/themes/fusioncharts.theme.ocean';\nimport CarbonTheme from 'fusioncharts/themes/fusioncharts.theme.carbon';\nimport data from './data.json';\n\nReactFC.fcRoot(\n  FusionCharts,\n  Column2D,\n  FusionTheme,\n  GammelTheme,\n  CandyTheme,\n  ZuneTheme,\n  OceanTheme,\n  CarbonTheme\n);\n\nconst chartConfigs = {\n  type: 'column2d',\n  width: '100%',\n  height: '100%',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chart: {},\n      currentVal: 'fusion'\n    };\n\n    this.renderComplete = this.renderComplete.bind(this);\n    this.radioHandler = this.radioHandler.bind(this);\n  }\n\n  renderComplete(chart) {\n    this.setState({ chart });\n  }\n\n  // Handler for radio buttons to change chart theme.\n  radioHandler(e) {\n    this.state.chart.setChartAttribute('theme', e.currentTarget.value);\n    this.setState({\n      currentVal: e.currentTarget.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactFC {...chartConfigs} onRender={this.renderComplete} />\n        <br />\n        <center>\n          <span>Choose a theme:</span>\n          <div className=\"change-type\">\n            <div>\n              <input\n                type=\"radio\"\n                value=\"fusion\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'fusion'}\n              />\n              <label>Fusion</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"gammel\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'gammel'}\n              />\n              <label>Gammel</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"candy\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'candy'}\n              />\n              <label>Candy</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"zune\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'zune'}\n              />\n              <label>Zune</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"ocean\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'ocean'}\n              />\n              <label>Ocean</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"carbon\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'carbon'}\n              />\n              <label>Carbon</label>\n            </div>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Column2D from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nconst chartConfigs = {\n  type: 'column2d',\n  width: '100%',\n  height: '80%',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chart: {},\n      currentVal: 'column2d'\n    };\n\n    this.renderComplete = this.renderComplete.bind(this);\n    this.radioHandler = this.radioHandler.bind(this);\n  }\n\n  renderComplete(chart) {\n    this.setState({ chart });\n  }\n\n  radioHandler(e) {\n    this.state.chart.chartType(e.currentTarget.value);\n    this.setState({\n      currentVal: e.currentTarget.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactFC {...chartConfigs} onRender={this.renderComplete} />\n        <br />\n        <center>\n          <span>Choose a chart type:</span>\n          <div className=\"change-type\">\n            <div>\n              <input\n                type=\"radio\"\n                value=\"column2d\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'column2d'}\n              />\n              <label>Column 2D Chart</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"bar2d\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'bar2d'}\n              />\n              <label>Bar 2D Chart</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"pie2d\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'pie2d'}\n              />\n              <label>Pie 2D Chart</label>\n            </div>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Charts from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\nconst chartConfigs = {\n  type: 'spline',\n  width: '100%',\n  height: '100%',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  render() {\n    return <ReactFC {...chartConfigs} />;\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Column2D from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nconst chartConfigs = {\n  type: 'column2d',\n  width: '100%',\n  height: '85%',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: [\n        'You will see notifications here for the chart lifecycle events'\n      ]\n    };\n\n    this.beforeDataUpdate = this.beforeDataUpdate.bind(this);\n    this.dataUpdated = this.dataUpdated.bind(this);\n    this.drawComplete = this.drawComplete.bind(this);\n    this.renderComplete = this.renderComplete.bind(this);\n  }\n\n  beforeDataUpdate() {\n    this.state.message = [<strong>Status: </strong>, ' beforeDataUpdate'];\n  }\n\n  dataUpdated() {\n    let newMessage = this.state.message.slice();\n    newMessage.push(', dataUpdated');\n    this.setState({\n      message: newMessage\n    });\n  }\n\n  drawComplete() {\n    let newMessage = this.state.message.slice();\n    newMessage.push(', drawComplete');\n    this.setState({\n      message: newMessage\n    });\n  }\n\n  renderComplete() {\n    let newMessage = this.state.message.slice();\n    newMessage.push(', renderComplete');\n    this.setState({\n      message: newMessage\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactFC\n          {...chartConfigs}\n          fcEvent-beforeDataUpdate={this.beforeDataUpdate}\n          fcEvent-dataUpdated={this.dataUpdated}\n          fcEvent-drawComplete={this.drawComplete}\n          fcEvent-renderComplete={this.renderComplete}\n        />\n        <p style={{ padding: '10px', background: '#f5f2f0' }}>\n          {this.state.message}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport PowerCharts from 'fusioncharts/fusioncharts.powercharts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, PowerCharts, FusionTheme);\n\nconst chartConfigs = {\n  type: 'dragcolumn2d',\n  width: '100%',\n  height: '85%',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message:\n        'Drag any column for years 2017 or 2018 to see updated value along with the label',\n      chart: {}\n    };\n\n    this.renderComplete = this.renderComplete.bind(this);\n    this.dataplotDragEnd = this.dataplotDragEnd.bind(this);\n  }\n\n  renderComplete(chart) {\n    this.setState({ chart });\n  }\n\n  dataplotDragEnd(eventObj, dataObj) {\n    var prevValue = FusionCharts.formatNumber(dataObj.startValue.toFixed(2));\n    var curValue = FusionCharts.formatNumber(dataObj.endValue.toFixed(2));\n    var labelYear = this.state.chart.args.dataSource.categories[0].category[\n      dataObj.dataIndex\n    ].label;\n    this.setState({\n      message: [\n        <strong>{eventObj.data.datasetName}</strong>,\n        ' is modified to ',\n        <strong>{'$' + curValue + 'M'}</strong>,\n        ' from ',\n        <strong>{'$' + prevValue + 'M'}</strong>,\n        ' for ',\n        <strong>{labelYear}</strong>\n      ]\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactFC\n          {...chartConfigs}\n          onRender={this.renderComplete}\n          fcEvent-dataplotDragEnd={this.dataplotDragEnd}\n        />\n        <p style={{ padding: '10px', background: '#f5f2f0' }}>\n          {this.state.message}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Column2D from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nconst chartConfigs = {\n  type: 'column2d',\n  width: '100%',\n  height: '80%',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nvar defaultMessage = 'Click on the plot to see the value along with the label';\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: '',\n      enabled: false\n    };\n\n    this.trackPlotClick = this.trackPlotClick.bind(this);\n    this.resetChart = this.resetChart.bind(this);\n    this.dataPlotClick = this.dataPlotClick.bind(this);\n  }\n\n  trackPlotClick() {\n    FusionCharts.addEventListener('dataplotClick', this.dataPlotClick);\n    this.setState({\n      message: defaultMessage,\n      enabled: true\n    });\n  }\n\n  dataPlotClick(eventObj, dataObj) {\n    this.setState({\n      message: [\n        'You have clicked on plot ',\n        <strong>{dataObj.categoryLabel}</strong>,\n        ' whose value is ',\n        <strong>{dataObj.displayValue}</strong>\n      ]\n    });\n  }\n\n  resetChart() {\n    FusionCharts.removeEventListener('dataplotClick', this.dataPlotClick);\n    this.setState({\n      message: '',\n      enabled: false\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactFC {...chartConfigs} />\n        <div style={{ padding: '5px' }} id=\"message\">\n          {this.state.message ||\n            'Click the below buttons to add an event dynamically to a chart'}\n        </div>\n        <button\n          className=\"btn btn-outline-secondary btn-sm\"\n          disabled={this.state.enabled}\n          onClick={this.trackPlotClick}\n        >\n          Add/ listen to data plot click event\n        </button>\n        <button\n          className=\"btn btn-outline-secondary btn-sm\"\n          disabled={!this.state.enabled}\n          onClick={this.resetChart}\n        >\n          Remove data plot click event\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Charts from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\nconst chartConfigs = {\n  type: 'Pie2D',\n  width: '100%',\n  height: 400,\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chart: {},\n      currentVal: 'none'\n    };\n\n    this.renderComplete = this.renderComplete.bind(this);\n    this.radioHandler = this.radioHandler.bind(this);\n    this.sliceClicked = this.sliceClicked.bind(this);\n  }\n\n  renderComplete(chart) {\n    this.setState({ chart });\n  }\n\n  // Handler for radio buttons to slice data plot.\n  radioHandler(e) {\n    if (e.currentTarget.value === 'none') {\n      this.state.chart.options.dataSource.data.map((data, index) => {\n        this.state.chart.slicePlotItem(index, false);\n      });\n    } else {\n      this.state.chart.slicePlotItem(e.currentTarget.value, true);\n    }\n    this.setState({\n      currentVal: e.currentTarget.value\n    });\n  }\n\n  // Event callback for 'dataplotClick'.\n  // Makes the relevant radio active when a plot is clicked.\n  sliceClicked(eventObj, dataObj) {\n    this.setState({\n      currentVal: eventObj.data.isSliced ? 'none' : eventObj.data.dataIndex\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactFC\n          {...chartConfigs}\n          onRender={this.renderComplete}\n          fcEvent-dataplotClick={this.sliceClicked}\n        />\n        <br />\n        <center>\n          <span>Slice out:</span>\n          <div className=\"change-type\">\n            <div>\n              <input\n                type=\"radio\"\n                value=\"none\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'none'}\n              />\n              <label>None</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"0\"\n                onChange={this.radioHandler}\n                checked={parseInt(this.state.currentVal) === 0}\n              />\n              <label>Apache</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"1\"\n                onChange={this.radioHandler}\n                checked={parseInt(this.state.currentVal) === 1}\n              />\n              <label>Microsoft</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"2\"\n                onChange={this.radioHandler}\n                checked={parseInt(this.state.currentVal) === 2}\n              />\n              <label>Zeus</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"3\"\n                onChange={this.radioHandler}\n                checked={parseInt(this.state.currentVal) === 3}\n              />\n              <label>Other</label>\n            </div>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Column2D from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nconst chartConfigs = {\n  type: 'column2d',\n  width: '600',\n  height: '350',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chart: {},\n      currentVal: 'medium'\n    };\n\n    this.renderComplete = this.renderComplete.bind(this);\n    this.radioHandler = this.radioHandler.bind(this);\n  }\n\n  renderComplete(chart) {\n    this.setState({ chart });\n  }\n\n  // Handler for radio buttons to change chart size.\n  radioHandler(e) {\n    switch (e.currentTarget.value) {\n      case 'small':\n        this.state.chart.resizeTo(400, 250);\n        break;\n\n      case 'medium':\n        this.state.chart.resizeTo(600, 350);\n        break;\n\n      case 'large':\n        this.state.chart.resizeTo(700, 400);\n        break;\n    }\n    this.setState({\n      currentVal: e.currentTarget.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactFC {...chartConfigs} onRender={this.renderComplete} />\n        <br />\n        <center className=\"chart-radios\">\n          <span>Choose a dimension:</span>\n          <div className=\"change-type\">\n            <div>\n              <input\n                type=\"radio\"\n                value=\"small\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'small'}\n              />\n              <label>400 x 250</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"medium\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'medium'}\n              />\n              <label>600 x 350</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"large\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'large'}\n              />\n              <label>700 x 400</label>\n            </div>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport FusionCharts from 'fusioncharts';\nimport Column2D from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport data from './data.json';\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\nconst chartConfigs = {\n  type: 'column2d',\n  width: '100%',\n  height: '80%',\n  dataFormat: 'json',\n  dataSource: data\n};\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chart: {}\n    };\n\n    this.renderComplete = this.renderComplete.bind(this);\n    this.changeCaption = this.changeCaption.bind(this);\n    this.changeXAxis = this.changeXAxis.bind(this);\n    this.changeYAxis = this.changeYAxis.bind(this);\n    this.resetChart = this.resetChart.bind(this);\n  }\n\n  renderComplete(chart) {\n    this.setState({ chart });\n  }\n\n  changeCaption() {\n    this.state.chart.setChartAttribute('caption', 'CAPTION');\n  }\n\n  changeXAxis() {\n    this.state.chart.setChartAttribute('xAxisName', 'X-AXIS NAME');\n  }\n\n  changeYAxis() {\n    this.state.chart.setChartAttribute('yAxisName', 'Y-AXIS NAME');\n  }\n\n  resetChart() {\n    Object.keys(chartConfigs.dataSource.chart).map(i => {\n      this.state.chart.setChartAttribute(i, chartConfigs.dataSource.chart[i]);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactFC {...chartConfigs} onRender={this.renderComplete} />\n        <center>\n          <button\n            className=\"btn btn-outline-secondary btn-sm\"\n            onClick={this.changeCaption}\n          >\n            Change Caption To: Caption\n          </button>\n          <button\n            className=\"btn btn-outline-secondary btn-sm\"\n            onClick={this.changeXAxis}\n          >\n            Change X_Axis Name To: X-Axis Name\n          </button>\n          <button\n            className=\"btn btn-outline-secondary btn-sm\"\n            onClick={this.changeYAxis}\n          >\n            Change Y_Axis Name To: Y-Axis Name\n          </button>\n          <button\n            className=\"btn btn-outline-secondary btn-sm\"\n            onClick={this.resetChart}\n          >\n            Reset\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\n// Import fusioncharts.js files from fusioncharts module\nimport FusionCharts from 'fusioncharts';\n// Import the timeseries file from fusioncharts module\nimport TimeSeries from 'fusioncharts/fusioncharts.timeseries';\n// Import ReactFusioncharts from react-fusioncharts module\n// import ReactFC from 'react-fusioncharts';\nimport ReactFC from 'react-fusioncharts';\n\n// Add core FusionCharts module and TimeSeries module as dependecies in react-fusioncharts\nReactFC.fcRoot(FusionCharts, TimeSeries);\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://raw.githubusercontent.com/fusioncharts/dev_centre_docs/master/assets/datasources/fusiontime/online-sales-single-series-area-data-plot/data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://raw.githubusercontent.com/fusioncharts/dev_centre_docs/master/assets/datasources/fusiontime/online-sales-single-series-area-data-plot/schema.json'\n).then(jsonify);\n\nclass SimpleTimeseries extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Here timeseriesDs is the configuration object which we will pass as a prop to our ReactFC component.\n      timeseriesDs: {\n        type: 'timeseries',\n        renderAt: 'container',\n        width: '100%',\n        height: '100%',\n        dataSource: {\n          caption: { text: 'Online Sales of a SuperStore in the US' },\n          // Initially data is set as null\n          data: null,\n          yAxis: [\n            {\n              plot: [\n                {\n                  value: 'Sales ($)'\n                }\n              ]\n            }\n          ]\n        }\n      }\n    };\n\n    // In this method we will create our DataStore and using that we will create a custom DataTable which takes two\n    // parameters, one is data another is schema. Check the method definition to get more info.\n    this.createDataTable = this.createDataTable.bind(this);\n  }\n\n  createDataTable() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      // First we are creating a DataStore\n      const fusionDataStore = new FusionCharts.DataStore();\n      // After that we are creating a DataTable by passing our data and schema as arguments\n      const fusionTable = fusionDataStore.createDataTable(data, schema);\n      // Afet that we simply mutated our timeseries datasource by attaching the above\n      // DataTable into its data property.\n      const timeseriesDs = Object.assign({}, this.state.timeseriesDs);\n      timeseriesDs.dataSource.data = fusionTable;\n      this.setState({\n        timeseriesDs\n      });\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    this.createDataTable();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ReactFC {...this.state.timeseriesDs} />\n      </div>\n    );\n  }\n}\n\nexport default SimpleTimeseries;\n","import React, { Component } from 'react';\n// Import fusioncharts.js files from fusioncharts module\nimport FusionCharts from 'fusioncharts';\n// Import the timeseries file from fusioncharts module\nimport TimeSeries from 'fusioncharts/fusioncharts.timeseries';\n// Import ReactFusioncharts from react-fusioncharts module\n// import ReactFC from 'react-fusioncharts';\nimport ReactFC from 'react-fusioncharts';\n\n// Add core FusionCharts module and TimeSeries module as dependecies in react-fusioncharts\nReactFC.fcRoot(FusionCharts, TimeSeries);\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/plotting-two-variable-measures-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/plotting-two-variable-measures-schema.json'\n).then(jsonify);\n\nclass MultivariateTimeSeries extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Here timeseriesDs is the configuration object which we will pass as a prop to our ReactFC component.\n      timeseriesDs: {\n        type: 'timeseries',\n        renderAt: 'container',\n        width: '100%',\n        height: '100%',\n        dataSource: {\n          caption: {\n            text: 'Cariaco Basin Sampling'\n          },\n          subcaption: {\n            text: 'Analysis of O₂ Concentration and Surface Temperature'\n          },\n          yAxis: [\n            {\n              plot: 'O2 concentration',\n              min: '3',\n              max: '6',\n              title: 'O₂ Concentration (mg/L)'\n            },\n            {\n              plot: 'Surface Temperature',\n              min: '18',\n              max: '30',\n              title: 'Surface Temperature (°C)'\n            }\n          ],\n          // Initially data is set as null\n          data: null\n        }\n      }\n    };\n\n    // In this method we will create our DataStore and using that we will create a custom DataTable which takes two\n    // parameters, one is data another is schema. Check the method definition to get more info.\n    this.createDataTable = this.createDataTable.bind(this);\n  }\n\n  createDataTable() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      // First we are creating a DataStore\n      const fusionDataStore = new FusionCharts.DataStore();\n      // After that we are creating a DataTable by passing our data and schema as arguments\n      const fusionTable = fusionDataStore.createDataTable(data, schema);\n      // Afet that we simply mutated our timeseries datasource by attaching the above\n      // DataTable into its data property.\n      const timeseriesDs = Object.assign({}, this.state.timeseriesDs);\n      timeseriesDs.dataSource.data = fusionTable;\n      this.setState({\n        timeseriesDs\n      });\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    this.createDataTable();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ReactFC {...this.state.timeseriesDs} />\n      </div>\n    );\n  }\n}\n\nexport default MultivariateTimeSeries;\n","import React, { Component } from 'react';\n// Import fusioncharts.js files from fusioncharts module\nimport FusionCharts from 'fusioncharts';\n// Import the timeseries file from fusioncharts module\nimport TimeSeries from 'fusioncharts/fusioncharts.timeseries';\n// Import ReactFusioncharts from react-fusioncharts module\n// import ReactFC from 'react-fusioncharts';\nimport ReactFC from 'react-fusioncharts';\n\n// Add core FusionCharts module and TimeSeries module as dependecies in react-fusioncharts\nReactFC.fcRoot(FusionCharts, TimeSeries);\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/column-line-combination-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/column-line-combination-schema.json'\n).then(jsonify);\n\nclass ColumnChartTimeAxis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Here timeseriesDs is the configuration object which we will pass as a prop to our ReactFC component.\n      timeseriesDs: {\n        type: 'timeseries',\n        renderAt: 'container',\n        width: '100%',\n        height: '100%',\n        dataSource: {\n          caption: {\n            text: 'Web visits & downloads'\n          },\n          subcaption: {\n            text: 'since 2015'\n          },\n          yAxis: [\n            {\n              plot: [\n                {\n                  value: 'Downloads',\n                  type: 'column'\n                },\n                {\n                  value: 'Web Visits',\n                  type: 'line'\n                }\n              ]\n            }\n          ],\n          // Initially data is set as null\n          data: null\n        }\n      }\n    };\n\n    // In this method we will create our DataStore and using that we will create a custom DataTable which takes two\n    // parameters, one is data another is schema. Check the method definition to get more info.\n    this.createDataTable = this.createDataTable.bind(this);\n  }\n\n  createDataTable() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      // First we are creating a DataStore\n      const fusionDataStore = new FusionCharts.DataStore();\n      // After that we are creating a DataTable by passing our data and schema as arguments\n      const fusionTable = fusionDataStore.createDataTable(data, schema);\n      // Afet that we simply mutated our timeseries datasource by attaching the above\n      // DataTable into its data property.\n      const timeseriesDs = Object.assign({}, this.state.timeseriesDs);\n      timeseriesDs.dataSource.data = fusionTable;\n      this.setState({\n        timeseriesDs\n      });\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    this.createDataTable();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ReactFC {...this.state.timeseriesDs} />\n      </div>\n    );\n  }\n}\n\nexport default ColumnChartTimeAxis;\n","import React, { Component } from 'react';\n// Import fusioncharts.js files from fusioncharts module\nimport FusionCharts from 'fusioncharts';\n// Import the timeseries file from fusioncharts module\nimport TimeSeries from 'fusioncharts/fusioncharts.timeseries';\n// Import ReactFusioncharts from react-fusioncharts module\n// import ReactFC from 'react-fusioncharts';\nimport ReactFC from 'react-fusioncharts';\n\n// Add core FusionCharts module and TimeSeries module as dependecies in react-fusioncharts\nReactFC.fcRoot(FusionCharts, TimeSeries);\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/candlestick-chart-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/candlestick-chart-schema.json'\n).then(jsonify);\n\nclass InteractiveCandlestickChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Here timeseriesDs is the configuration object which we will pass as a prop to our ReactFC component.\n      timeseriesDs: {\n        type: 'timeseries',\n        renderAt: 'container',\n        width: '100%',\n        height: '100%',\n        dataSource: {\n          caption: {\n            text: 'Apple Inc. Stock Price'\n          },\n          yAxis: [\n            {\n              plot: {\n                open: 'Open',\n                high: 'High',\n                low: 'Low',\n                close: 'Close',\n                type: 'candlestick'\n              },\n              title: 'Value'\n            }\n          ],\n          // Initially data is set as null\n          data: null\n        }\n      }\n    };\n\n    // In this method we will create our DataStore and using that we will create a custom DataTable which takes two\n    // parameters, one is data another is schema. Check the method definition to get more info.\n    this.createDataTable = this.createDataTable.bind(this);\n  }\n\n  createDataTable() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      // First we are creating a DataStore\n      const fusionDataStore = new FusionCharts.DataStore();\n      // After that we are creating a DataTable by passing our data and schema as arguments\n      const fusionTable = fusionDataStore.createDataTable(data, schema);\n      // Afet that we simply mutated our timeseries datasource by attaching the above\n      // DataTable into its data property.\n      const timeseriesDs = Object.assign({}, this.state.timeseriesDs);\n      timeseriesDs.dataSource.data = fusionTable;\n      this.setState({\n        timeseriesDs\n      });\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    this.createDataTable();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ReactFC {...this.state.timeseriesDs} />\n      </div>\n    );\n  }\n}\n\nexport default InteractiveCandlestickChart;\n","import React, { Component } from 'react';\n// Import fusioncharts.js files from fusioncharts module\nimport FusionCharts from 'fusioncharts';\n// Import the timeseries file from fusioncharts module\nimport TimeSeries from 'fusioncharts/fusioncharts.timeseries';\n// Import ReactFusioncharts from react-fusioncharts module\n// import ReactFC from 'react-fusioncharts';\nimport ReactFC from 'react-fusioncharts';\n\n// Add core FusionCharts module and TimeSeries module as dependecies in react-fusioncharts\nReactFC.fcRoot(FusionCharts, TimeSeries);\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/annotating-single-data-point-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/annotating-single-data-point-schema.json'\n).then(jsonify);\n\nclass AnnotatingData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Here timeseriesDs is the configuration object which we will pass as a prop to our ReactFC component.\n      timeseriesDs: {\n        type: 'timeseries',\n        renderAt: 'container',\n        width: '100%',\n        height: '100%',\n        dataSource: {\n          caption: {\n            text: 'Interest Rate Analysis'\n          },\n          subCaption: {\n            text: 'Federal Reserve (USA)'\n          },\n          yAxis: [\n            {\n              plot: 'Interest Rate',\n              format: {\n                suffix: '%'\n              },\n              title: 'Interest Rate'\n            }\n          ],\n          dataMarker: [\n            {\n              seriesName: 'Interest Rate',\n              time: 'Mar-1980',\n              identifier: 'H',\n              timeFormat: '%b-%Y',\n              tooltext:\n                'As a part of credit control program, under the leadership of Paul Volcker, the Fed tightened the money supply, allowing the federal fund rates to approach 20 percent.'\n            },\n            {\n              seriesName: 'Interest Rate',\n              time: 'Aug-1982',\n              identifier: 'L',\n              timeFormat: '%b-%Y',\n              tooltext:\n                'The FED eases off the monetary brakes, allowing interest rates to fall and the economy to begin a strong recovery.'\n            },\n            {\n              seriesName: 'Interest Rate',\n              time: 'Oct-1987',\n              identifier: 'L',\n              timeFormat: '%b-%Y',\n              tooltext:\n                'The FED is forced to ease rate after the stock market crash.'\n            },\n            {\n              seriesName: 'Interest Rate',\n              time: 'May-1989',\n              identifier: 'H',\n              timeFormat: '%b-%Y',\n              tooltext:\n                'Liquidity problem forced the Fed to increase rate to nearly 10%.'\n            },\n            {\n              seriesName: 'Interest Rate',\n              time: 'Sept-1992',\n              identifier: 'L',\n              timeFormat: '%b-%Y',\n              tooltext:\n                'To fight the jobless economy growth the Fed had to reduce the interest rate to 3%.'\n            },\n            {\n              seriesName: 'Interest Rate',\n              time: 'Jun-2003',\n              identifier: 'L',\n              timeFormat: '%b-%Y',\n              tooltext:\n                'Struggling to revive the economy, the FED cuts it’s benchmark rate to 1%.'\n            },\n            {\n              seriesName: 'Interest Rate',\n              time: 'Sep-2007',\n              identifier: 'L',\n              timeFormat: '%b-%Y',\n              tooltext: 'Fed started reducing the Federal Fund Rate.'\n            },\n            {\n              seriesName: 'Interest Rate',\n              time: 'Dec-2008',\n              identifier: 'L',\n              timeFormat: '%b-%Y',\n              tooltext:\n                'Fed reduced the interest rates to sub 0.25% to manage the menace of longest economic downturn since World War 2'\n            }\n          ],\n          // Initially data is set as null\n          data: null\n        }\n      }\n    };\n\n    // In this method we will create our DataStore and using that we will create a custom DataTable which takes two\n    // parameters, one is data another is schema. Check the method definition to get more info.\n    this.createDataTable = this.createDataTable.bind(this);\n  }\n\n  createDataTable() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      // First we are creating a DataStore\n      const fusionDataStore = new FusionCharts.DataStore();\n      // After that we are creating a DataTable by passing our data and schema as arguments\n      const fusionTable = fusionDataStore.createDataTable(data, schema);\n      // Afet that we simply mutated our timeseries datasource by attaching the above\n      // DataTable into its data property.\n      const timeseriesDs = Object.assign({}, this.state.timeseriesDs);\n      timeseriesDs.dataSource.data = fusionTable;\n      this.setState({\n        timeseriesDs\n      });\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    this.createDataTable();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ReactFC {...this.state.timeseriesDs} />\n      </div>\n    );\n  }\n}\n\nexport default AnnotatingData;\n","import React, { Component } from 'react';\n// Import fusioncharts.js files from fusioncharts module\nimport FusionCharts from 'fusioncharts';\n// Import the timeseries file from fusioncharts module\nimport TimeSeries from 'fusioncharts/fusioncharts.timeseries';\n// Import ReactFusioncharts from react-fusioncharts module\n// import ReactFC from 'react-fusioncharts';\nimport ReactFC from 'react-fusioncharts';\n\n// Add core FusionCharts module and TimeSeries module as dependecies in react-fusioncharts\nReactFC.fcRoot(FusionCharts, TimeSeries);\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/single-event-overlay-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/single-event-overlay-schema.json'\n).then(jsonify);\n\nclass SingleEventOverlay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Here timeseriesDs is the configuration object which we will pass as a prop to our ReactFC component.\n      timeseriesDs: {\n        type: 'timeseries',\n        renderAt: 'container',\n        width: '100%',\n        height: '100%',\n        dataSource: {\n          caption: {\n            text: 'Interest Rate Analysis'\n          },\n          subCaption: {\n            text: 'Federal Reserve (USA)'\n          },\n          yAxis: [\n            {\n              plot: 'Interest Rate',\n              format: {\n                suffix: '%'\n              },\n              title: 'Interest Rate'\n            }\n          ],\n          xAxis: {\n            plot: 'Time',\n            timemarker: [\n              {\n                start: 'Mar-1980',\n                label: 'US inflation peaked at 14.8%.',\n                timeFormat: '%b-%Y',\n                style: {\n                  marker: {\n                    fill: '#D0D6F4'\n                  }\n                }\n              },\n              {\n                start: 'May-1981',\n                label:\n                  'To control inflation, the Fed started {br} raising interest rates to over {br} 20%.',\n                timeFormat: '%b-%Y'\n              },\n              {\n                start: 'Jun-1983',\n                label:\n                  'By proactive actions of Mr.Volcker, {br} the inflation falls to 2.4% {br} from the peak of over 14% {br} just three years ago.',\n                timeFormat: '%b-%Y',\n                style: {\n                  marker: {\n                    fill: '#D0D6F4'\n                  }\n                }\n              },\n              {\n                start: 'Oct-1987',\n                label:\n                  'The Dow Jones Industrial Average lost {br} about 30% of it’s value.',\n                timeFormat: '%b-%Y',\n                style: {\n                  marker: {\n                    fill: '#FBEFCC'\n                  }\n                }\n              },\n              {\n                start: 'Jan-1989',\n                label:\n                  'George H.W. Bush becomes {br} the 41st president of US!',\n                timeFormat: '%b-%Y'\n              },\n              {\n                start: 'Aug-1990',\n                label:\n                  'The oil prices spiked to $35 {br} per barrel from $15 per barrel {br} because of the Gulf War.',\n                timeFormat: '%b-%Y'\n              },\n              {\n                start: 'Dec-1996',\n                label:\n                  'Alan Greenspan warns of the dangers {br} of \"irrational exuberance\" in financial markets, {br} an admonition that goes unheeded',\n                timeFormat: '%b-%Y'\n              },\n              {\n                start: 'Sep-2008',\n                label: 'Lehman Brothers collapsed!',\n                timeFormat: '%b-%Y'\n              },\n              {\n                start: 'Mar-2009',\n                label:\n                  'The net worth of US households {br} stood at a trough of $55 trillion.',\n                timeFormat: '%b-%Y',\n                style: {\n                  marker: {\n                    fill: '#FBEFCC'\n                  }\n                }\n              },\n              {\n                start: 'Oct-2009',\n                label: 'Unemployment rate peaked {br} in given times to 10%.',\n                timeFormat: '%b-%Y'\n              }\n            ]\n          },\n          // Initially data is set as null\n          data: null\n        }\n      }\n    };\n\n    // In this method we will create our DataStore and using that we will create a custom DataTable which takes two\n    // parameters, one is data another is schema. Check the method definition to get more info.\n    this.createDataTable = this.createDataTable.bind(this);\n  }\n\n  createDataTable() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      // First we are creating a DataStore\n      const fusionDataStore = new FusionCharts.DataStore();\n      // After that we are creating a DataTable by passing our data and schema as arguments\n      const fusionTable = fusionDataStore.createDataTable(data, schema);\n      // Afet that we simply mutated our timeseries datasource by attaching the above\n      // DataTable into its data property.\n      const timeseriesDs = Object.assign({}, this.state.timeseriesDs);\n      timeseriesDs.dataSource.data = fusionTable;\n      this.setState({\n        timeseriesDs\n      });\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    this.createDataTable();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ReactFC {...this.state.timeseriesDs} />\n      </div>\n    );\n  }\n}\n\nexport default SingleEventOverlay;\n","import React, { Component } from 'react';\n// Import fusioncharts.js files from fusioncharts module\nimport FusionCharts from 'fusioncharts';\n// Import the timeseries file from fusioncharts module\nimport TimeSeries from 'fusioncharts/fusioncharts.timeseries';\n// Import ReactFusioncharts from react-fusioncharts module\n// import ReactFC from 'react-fusioncharts';\nimport ReactFC from 'react-fusioncharts';\n\n// Add core FusionCharts module and TimeSeries module as dependecies in react-fusioncharts\nReactFC.fcRoot(FusionCharts, TimeSeries);\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/plotting-multiple-series-on-time-axis-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/plotting-multiple-series-on-time-axis-schema.json'\n).then(jsonify);\n\nclass MultiSeriesTimeAxis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Here timeseriesDs is the configuration object which we will pass as a prop to our ReactFC component.\n      timeseriesDs: {\n        type: 'timeseries',\n        renderAt: 'container',\n        width: '100%',\n        height: '100%',\n        dataSource: {\n          caption: {\n            text: 'Sales Analysis'\n          },\n          subcaption: {\n            text: 'Grocery & Footwear'\n          },\n          series: 'Type',\n          yAxis: [\n            {\n              plot: 'Sales Value',\n              title: 'Sale Value',\n              format: {\n                prefix: '$'\n              }\n            }\n          ],\n          // Initially data is set as null\n          data: null\n        }\n      }\n    };\n\n    // In this method we will create our DataStore and using that we will create a custom DataTable which takes two\n    // parameters, one is data another is schema. Check the method definition to get more info.\n    this.createDataTable = this.createDataTable.bind(this);\n  }\n\n  createDataTable() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      // First we are creating a DataStore\n      const fusionDataStore = new FusionCharts.DataStore();\n      // After that we are creating a DataTable by passing our data and schema as arguments\n      const fusionTable = fusionDataStore.createDataTable(data, schema);\n      // Afet that we simply mutated our timeseries datasource by attaching the above\n      // DataTable into its data property.\n      const timeseriesDs = Object.assign({}, this.state.timeseriesDs);\n      timeseriesDs.dataSource.data = fusionTable;\n      this.setState({\n        timeseriesDs\n      });\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    this.createDataTable();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ReactFC {...this.state.timeseriesDs} />\n      </div>\n    );\n  }\n}\n\nexport default MultiSeriesTimeAxis;\n","import React, { Component } from 'react';\n// Import fusioncharts.js files from fusioncharts module\nimport FusionCharts from 'fusioncharts';\n// Import the timeseries file from fusioncharts module\nimport TimeSeries from 'fusioncharts/fusioncharts.timeseries';\n// Import ReactFusioncharts from react-fusioncharts module\n// import ReactFC from 'react-fusioncharts';\nimport ReactFC from 'react-fusioncharts';\n\n// Add core FusionCharts module and TimeSeries module as dependecies in react-fusioncharts\nReactFC.fcRoot(FusionCharts, TimeSeries);\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/area-chart-with-time-axis-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/area-chart-with-time-axis-schema.json'\n).then(jsonify);\n\nclass AreaTimeAxis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Here timeseriesDs is the configuration object which we will pass as a prop to our ReactFC component.\n      timeseriesDs: {\n        type: 'timeseries',\n        renderAt: 'container',\n        width: '100%',\n        height: '100%',\n        dataSource: {\n          chart: {\n            showLegend: 0\n          },\n          caption: {\n            text: 'Daily Visitors Count of a Website'\n          },\n          yAxis: [\n            {\n              plot: {\n                value: 'Daily Visitors',\n                type: 'area'\n              },\n              title: 'Daily Visitors (in thousand)'\n            }\n          ],\n          // Initially data is set as null\n          data: null\n        }\n      }\n    };\n\n    // In this method we will create our DataStore and using that we will create a custom DataTable which takes two\n    // parameters, one is data another is schema. Check the method definition to get more info.\n    this.createDataTable = this.createDataTable.bind(this);\n  }\n\n  createDataTable() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      // First we are creating a DataStore\n      const fusionDataStore = new FusionCharts.DataStore();\n      // After that we are creating a DataTable by passing our data and schema as arguments\n      const fusionTable = fusionDataStore.createDataTable(data, schema);\n      // Afet that we simply mutated our timeseries datasource by attaching the above\n      // DataTable into its data property.\n      const timeseriesDs = Object.assign({}, this.state.timeseriesDs);\n      timeseriesDs.dataSource.data = fusionTable;\n      this.setState({\n        timeseriesDs\n      });\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    this.createDataTable();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ReactFC {...this.state.timeseriesDs} />\n      </div>\n    );\n  }\n}\n\nexport default AreaTimeAxis;\n","import React, { Component } from 'react';\n// Import fusioncharts.js files from fusioncharts module\nimport FusionCharts from 'fusioncharts';\n// Import the timeseries file from fusioncharts module\nimport TimeSeries from 'fusioncharts/fusioncharts.timeseries';\n// Import ReactFusioncharts from react-fusioncharts module\n// import ReactFC from 'react-fusioncharts';\nimport ReactFC from 'react-fusioncharts';\n\n// Add core FusionCharts module and TimeSeries module as dependecies in react-fusioncharts\nReactFC.fcRoot(FusionCharts, TimeSeries);\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/date-range-event-overlay-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/date-range-event-overlay-schema.json'\n).then(jsonify);\n\nclass DateEventOverlay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Here timeseriesDs is the configuration object which we will pass as a prop to our ReactFC component.\n      timeseriesDs: {\n        type: 'timeseries',\n        renderAt: 'container',\n        width: '100%',\n        height: '100%',\n        dataSource: {\n          caption: {\n            text: 'Interest Rate Analysis'\n          },\n          subCaption: {\n            text: 'Federal Reserve (USA)'\n          },\n          yAxis: [\n            {\n              plot: 'Interest Rate',\n              format: {\n                suffix: '%'\n              },\n              title: 'Interest Rate'\n            }\n          ],\n          xAxis: {\n            plot: 'Time',\n            timemarker: [\n              {\n                start: 'Jul-1981',\n                end: 'Nov-1982',\n                label:\n                  'Economic downturn was triggered by {br} tight monetary policy in an effort to {br} fight mounting inflation.',\n                timeFormat: '%b-%Y'\n              },\n              {\n                start: 'Jul-1990',\n                end: 'Mar-1991',\n                label:\n                  'This eight month recession period {br} was characterized by a sluggish employment recovery, {br} most commonly referred to as a jobless recovery.',\n                timeFormat: '%b-%Y'\n              },\n              {\n                start: 'Jun-2004',\n                end: 'Jul-2006',\n                label:\n                  'The Fed after raising interest rates {br} at 17 consecutive meetings, ends its campaign {br} to slow the economy and forestall inflation.',\n                timeFormat: '%b-%Y'\n              },\n              {\n                start: 'Dec-2007',\n                end: 'Jun-2009',\n                label:\n                  'Recession caused by the worst {br} collapse of financial system in recent {br} times.',\n                timeFormat: '%b-%Y'\n              }\n            ]\n          },\n          // Initially data is set as null\n          data: null\n        }\n      }\n    };\n\n    // In this method we will create our DataStore and using that we will create a custom DataTable which takes two\n    // parameters, one is data another is schema. Check the method definition to get more info.\n    this.createDataTable = this.createDataTable.bind(this);\n  }\n\n  createDataTable() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      // First we are creating a DataStore\n      const fusionDataStore = new FusionCharts.DataStore();\n      // After that we are creating a DataTable by passing our data and schema as arguments\n      const fusionTable = fusionDataStore.createDataTable(data, schema);\n      // Afet that we simply mutated our timeseries datasource by attaching the above\n      // DataTable into its data property.\n      const timeseriesDs = Object.assign({}, this.state.timeseriesDs);\n      timeseriesDs.dataSource.data = fusionTable;\n      this.setState({\n        timeseriesDs\n      });\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    this.createDataTable();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ReactFC {...this.state.timeseriesDs} />\n      </div>\n    );\n  }\n}\n\nexport default DateEventOverlay;\n","import React, { Component } from 'react';\n// Import fusioncharts.js files from fusioncharts module\nimport FusionCharts from 'fusioncharts';\n// Import the timeseries file from fusioncharts module\nimport TimeSeries from 'fusioncharts/fusioncharts.timeseries';\n// Import ReactFusioncharts from react-fusioncharts module\n// import ReactFC from 'react-fusioncharts';\nimport ReactFC from 'react-fusioncharts';\n\n// Add core FusionCharts module and TimeSeries module as dependecies in react-fusioncharts\nReactFC.fcRoot(FusionCharts, TimeSeries);\n\nconst jsonify = res => res.json();\n// This is the remote url to fetch the data.\nconst dataFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/adding-a-reference-line-data.json'\n).then(jsonify);\n// This is the remote url to fetch the schema.\nconst schemaFetch = fetch(\n  'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/adding-a-reference-line-schema.json'\n).then(jsonify);\n\nclass AddingReferenceLine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Here timeseriesDs is the configuration object which we will pass as a prop to our ReactFC component.\n      timeseriesDs: {\n        type: 'timeseries',\n        renderAt: 'container',\n        width: '100%',\n        height: '100%',\n        dataSource: {\n          caption: {\n            text: 'Temperature readings in Italy'\n          },\n          yAxis: [\n            {\n              plot: 'Temperature',\n              title: 'Temperature',\n              format: {\n                suffix: '°C'\n              },\n              style: {\n                title: {\n                  'font-size': '14px'\n                }\n              },\n              referenceLine: [\n                {\n                  label: 'Controlled Temperature',\n                  value: '10'\n                }\n              ]\n            }\n          ],\n          // Initially data is set as null\n          data: null\n        }\n      }\n    };\n\n    // In this method we will create our DataStore and using that we will create a custom DataTable which takes two\n    // parameters, one is data another is schema. Check the method definition to get more info.\n    this.createDataTable = this.createDataTable.bind(this);\n  }\n\n  createDataTable() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      // First we are creating a DataStore\n      const fusionDataStore = new FusionCharts.DataStore();\n      // After that we are creating a DataTable by passing our data and schema as arguments\n      const fusionTable = fusionDataStore.createDataTable(data, schema);\n      // Afet that we simply mutated our timeseries datasource by attaching the above\n      // DataTable into its data property.\n      const timeseriesDs = Object.assign({}, this.state.timeseriesDs);\n      timeseriesDs.dataSource.data = fusionTable;\n      this.setState({\n        timeseriesDs\n      });\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    this.createDataTable();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ReactFC {...this.state.timeseriesDs} />\n      </div>\n    );\n  }\n}\n\nexport default AddingReferenceLine;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, NavLink } from 'react-router-dom';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport 'codemirror/mode/javascript/javascript';\n\nimport config from '../samples/config.json';\n\nimport NavItems from './NavItems';\n\nimport SimpleChart from '../samples/simple-chart';\nimport Pie3DChart from '../samples/3d-pie-chart';\nimport ColumnLineAreaCombiChart from '../samples/column-line-area-combi-chart';\nimport FetchDataFromJsonUrl from '../samples/fetch-data-from-json-url';\nimport FetchDataFromXmlUrl from '../samples/fetch-data-from-xml-url';\nimport UpdateChartData from '../samples/update-chart-data';\nimport UpdateChartAttributes from '../samples/update-chart-attributes';\nimport TriggerEventsFromChart from '../samples/trigger-events-from-chart';\nimport PercentageCalculation from '../samples/percentage-calculation';\nimport ClientSideExporting from '../samples/client-side-exporting';\nimport DrillDown from '../samples/drill-down';\nimport SimpleGauge from '../samples/simple-gauge';\nimport SimpleMap from '../samples/simple-map';\nimport ApplyTheme from '../samples/apply-theme';\nimport ChangeChartTypeRuntime from '../samples/change-chart-type-runtime';\nimport UseAnnotations from '../samples/use-annotations';\nimport LifecycleEvents from '../samples/lifecycle-events';\nimport SpecialEvents from '../samples/special-events';\nimport DynamicEventListening from '../samples/dynamic-event-listening';\nimport SliceDataPlots from '../samples/slice-data-plots';\nimport ResponsiveCharts from '../samples/responsive-charts';\nimport UCATM from '../samples/update-chart-attribute-through-method';\nimport SimpleTimeSeries from '../samples/simple-timeseries';\nimport MultivariateTimeSeries from '../samples/multivariate-timeseries';\nimport ColumnChartTimeAxis from '../samples/column-chart-time-axis';\nimport InteractiveCandlestickChart from '../samples/interactive-candlestick-chart';\nimport AnnotatingData from '../samples/annotating-data/index.js';\nimport SingleEventOverlay from '../samples/single-event-overlay/index.js';\nimport MultiSeriesTimeAxis from '../samples/multi-series-time-axis/index.js';\nimport AreaTimeAxis from '../samples/area-time-axis/index.js';\nimport DateEventOverlay from '../samples/date-event-overlay/index.js';\nimport AddingReferenceLine from '../samples/adding-reference-line/index.js';\n\nvar options = {\n  tabSize: '4',\n  smartIndent: true,\n  lineNumbers: true,\n  readOnly: true,\n  theme: 'dracula',\n  mode: 'javascript',\n  viewportMargin: Infinity\n};\n\nclass Samples extends Component {\n  constructor(props) {\n    super(props);\n\n    var locationArr = window.location.pathname.split('/');\n    var paths = Object.values(config.sampleRouteMapping);\n    var activePath = paths.findIndex(\n      element => element === '/' + locationArr[locationArr.length - 1]\n    );\n    if (activePath === -1) {\n      activePath = 1;\n    } else {\n      ++activePath;\n    }\n\n    this.state = {\n      editorText: '',\n      activePath: activePath,\n      button: 'js',\n      showModal: false,\n      config: config\n    };\n  }\n\n  checkActiveTab(match, location, i) {\n    if (\n      (location.pathname === '/' && parseInt(i) === 1) ||\n      (match && match.url === location.pathname)\n    ) {\n      function makeActive() {\n        return true;\n      }\n      return makeActive;\n    }\n  }\n\n  tabClicked(index) {\n    this.setState({\n      activePath: index\n    });\n  }\n\n  buttonClicked(button) {\n    this.setState({\n      button: button\n    });\n  }\n\n  modalToggle(modal, event) {\n    var modalEle = document.getElementById('myModal');\n    if (\n      event &&\n      (event.target !== modalEle && !modalEle.contains(event.target))\n    ) {\n      modal = true;\n    }\n    this.setState({\n      showModal: modal\n    });\n  }\n\n  toggleFusion() {}\n\n  render() {\n    var editorText = '';\n    if (this.state.button === 'js') {\n      editorText = this.state.config.sampleProps[this.state.activePath].code;\n    } else if (this.state.button === 'data') {\n      editorText = this.state.config.sampleProps[this.state.activePath].data;\n    } else if (this.state.button === 'schema') {\n      editorText = this.state.config.sampleProps[this.state.activePath].schema;\n    }\n\n    return (\n      <BrowserRouter basename=\"react-fusioncharts-component\">\n        <div\n          className={\n            'demo bg-light-purple pt-4 pb-4 chart-' +\n            this.state.config.sampleProps[this.state.activePath].directory\n          }\n        >\n          <div className=\"container container-1200 info-wrapper\">\n            <div className=\"row\">\n              <div className=\"col-12 d-flex justify-content-center d-md-none\">\n                <div\n                  id=\"mobileChart-selector\"\n                  className=\"base-dropdown chart-selector\"\n                  onClick={() => this.modalToggle(true)}\n                >\n                  <div className=\"selector\">\n                    {this.state.config.sampleProps[this.state.activePath].title}\n                  </div>\n                  <div className=\"placeholder\">Quick Demo:</div>\n                  <div className=\"caret\">\n                    <i className=\"fc_dropdown\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              id=\"myModal\"\n              className={'modal'.concat(\n                this.state.showModal ? ' sumo' : ' hidden'\n              )}\n              onClick={event => this.modalToggle(false, event)}\n            >\n              <div className=\"modal-content\">\n                <div className=\"nav-list\">\n                  {Object.keys(this.state.config.sampleProps).map(i => (\n                    <NavLink\n                      className=\"nav-item\"\n                      activeClassName=\"selected\"\n                      key={'tab-' + i}\n                      to={this.state.config.sampleRouteMapping[i]}\n                      onClick={() => this.tabClicked(i)}\n                      isActive={(match, location) =>\n                        this.checkActiveTab(match, location, i)\n                      }\n                    >\n                      <div\n                        style={{\n                          display: 'flex',\n                          justifyContent: 'space-between'\n                        }}\n                      >\n                        <div className=\"h5\">\n                          {this.state.config.sampleProps[i].title}\n                        </div>\n                        <div className=\"h5 badge badge-normal\">\n                          {this.state.config.sampleProps[i].type ===\n                          'FusionTime'\n                            ? this.state.config.sampleProps[i].type\n                            : null}\n                        </div>\n                      </div>\n                      <div className=\"p item-desc\">\n                        {this.state.config.sampleProps[i].desc}\n                      </div>\n                    </NavLink>\n                  ))}\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"side-nav col-3 d-none d-md-block\">\n                <div className=\"nav-heading\">Quick Demo:</div>\n                <div className=\"nav-list\">\n                  {Object.keys(this.state.config.sampleProps).map(i => (\n                    <NavItems\n                      activePath={this.state.activePath}\n                      config={this.state.config}\n                      index={i}\n                      key={'tab-' + i}\n                      tabClicked={() => this.tabClicked(i)}\n                      checkActiveTab={(match, location) =>\n                        this.checkActiveTab(match, location, i)\n                      }\n                    />\n                  ))}\n                </div>\n              </div>\n              <div className=\"col-md-9 col-12\">\n                <div className=\"card shadow\">\n                  <div className=\"card-body chart-wrapper\">\n                    <div className=\"chart-wrapper-inner\">\n                      <Route exact path=\"/\" component={SimpleChart} />\n                      <Route path=\"/simple-chart\" component={SimpleChart} />\n                      <Route path=\"/3d-pie-chart\" component={Pie3DChart} />\n                      <Route\n                        path=\"/column-line-area-combi-chart\"\n                        component={ColumnLineAreaCombiChart}\n                      />\n                      <Route\n                        path=\"/fetch-data-from-json-url\"\n                        component={FetchDataFromJsonUrl}\n                      />\n                      <Route\n                        path=\"/fetch-data-from-xml-url\"\n                        component={FetchDataFromXmlUrl}\n                      />\n                      <Route\n                        path=\"/update-chart-data\"\n                        component={UpdateChartData}\n                      />\n                      <Route\n                        path=\"/update-chart-attributes\"\n                        component={UpdateChartAttributes}\n                      />\n                      <Route\n                        path=\"/trigger-events-from-chart\"\n                        component={TriggerEventsFromChart}\n                      />\n                      <Route\n                        path=\"/percentage-calculation\"\n                        component={PercentageCalculation}\n                      />\n                      <Route\n                        path=\"/export-charts\"\n                        component={ClientSideExporting}\n                      />\n                      <Route path=\"/drill-down\" component={DrillDown} />\n                      <Route path=\"/simple-gauge\" component={SimpleGauge} />\n                      <Route path=\"/world-map\" component={SimpleMap} />\n                      <Route\n                        path=\"/change-chart-type-runtime\"\n                        component={ChangeChartTypeRuntime}\n                      />\n                      <Route\n                        path=\"/use-annotations\"\n                        component={UseAnnotations}\n                      />\n                      <Route\n                        path=\"/lifecycle-events\"\n                        component={LifecycleEvents}\n                      />\n                      <Route path=\"/special-events\" component={SpecialEvents} />\n                      <Route\n                        path=\"/dynamic-event-listening\"\n                        component={DynamicEventListening}\n                      />\n                      <Route\n                        path=\"/slice-data-plots\"\n                        component={SliceDataPlots}\n                      />\n                      <Route\n                        path=\"/responsive-charts\"\n                        component={ResponsiveCharts}\n                      />\n                      <Route\n                        path=\"/update-chart-attribute-through-method\"\n                        component={UCATM}\n                      />\n                      <Route path=\"/apply-theme\" component={ApplyTheme} />\n                      <Route\n                        path=\"/simple-timeseries\"\n                        component={SimpleTimeSeries}\n                      />\n                      <Route\n                        path=\"/multivariate-timeseries\"\n                        component={MultivariateTimeSeries}\n                      />\n                      <Route\n                        path=\"/column-chart-time-axis\"\n                        component={ColumnChartTimeAxis}\n                      />\n                      <Route\n                        path=\"/interactive-candlestick-chart\"\n                        component={InteractiveCandlestickChart}\n                      />\n                      <Route\n                        path=\"/annotating-data\"\n                        component={AnnotatingData}\n                      />\n                      <Route\n                        path=\"/single-event-overlay\"\n                        component={SingleEventOverlay}\n                      />\n                      <Route\n                        path=\"/multi-series-time-axis\"\n                        component={MultiSeriesTimeAxis}\n                      />\n                      <Route\n                        path=\"/column-time-axis\"\n                        component={ColumnChartTimeAxis}\n                      />\n                      <Route path=\"/area-time-axis\" component={AreaTimeAxis} />\n                      <Route\n                        path=\"/date-event-overlay\"\n                        component={DateEventOverlay}\n                      />\n                      <Route\n                        path=\"/adding-reference-line\"\n                        component={AddingReferenceLine}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"code-view mt-2\">\n                  <div\n                    className=\"card-shadow\"\n                    style={{ background: '#03040B' }}\n                  >\n                    <div\n                      className=\"code-nav-btns btn-group\"\n                      role=\"group\"\n                      aria-label=\"Basic example\"\n                    >\n                      <button\n                        type=\"button\"\n                        id=\"js\"\n                        onClick={() => this.buttonClicked('js')}\n                        className={'btn btn-code'.concat(\n                          this.state.button === 'js' ? ' selected' : ''\n                        )}\n                      >\n                        JavaScript\n                      </button>\n                      <button\n                        type=\"button\"\n                        id=\"data\"\n                        onClick={() => this.buttonClicked('data')}\n                        className={'btn btn-code'.concat(\n                          this.state.button === 'data' ? ' selected' : ''\n                        )}\n                      >\n                        Data\n                      </button>\n                      {this.state.config.sampleProps[this.state.activePath]\n                        .schema ? (\n                        <button\n                          type=\"button\"\n                          id=\"data\"\n                          onClick={() => this.buttonClicked('schema')}\n                          className={'btn btn-code'.concat(\n                            this.state.button === 'schema' ? ' selected' : ''\n                          )}\n                        >\n                          Schema\n                        </button>\n                      ) : null}\n                    </div>\n                    <div className=\"card-body p-0\">\n                      <div className=\"code-panel\">\n                        <div className=\"code-panel-header\">\n                          <div id=\"chartCode\">\n                            <CodeMirror value={editorText} options={options} />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Samples;\n","import React from 'react';\nimport CodeMirror from 'react-codemirror';\nimport 'codemirror/mode/javascript/javascript';\n\nvar options = {\n  tabSize: '4',\n  smartIndent: true,\n  lineNumbers: true,\n  readOnly: true,\n  theme: 'dracula',\n  mode: 'javascript',\n  viewportMargin: Infinity\n};\n\nvar chartJSON = {\n  chart: {\n    caption: 'Countries With Most Oil Reserves [2017-18]',\n    subCaption: 'In MMbbl = One Million barrels',\n    xAxisName: 'Country',\n    yAxisName: 'Reserves (MMbbl)',\n    numberSuffix: 'K',\n    theme: 'fusion'\n  },\n  data: [\n    {\n      label: 'Venezuela',\n      value: '290'\n    },\n    {\n      label: 'Saudi',\n      value: '260'\n    },\n    {\n      label: 'Canada',\n      value: '180'\n    },\n    {\n      label: 'Iran',\n      value: '140'\n    },\n    {\n      label: 'Russia',\n      value: '115'\n    },\n    {\n      label: 'UAE',\n      value: '100'\n    },\n    {\n      label: 'US',\n      value: '30'\n    },\n    {\n      label: 'China',\n      value: '30'\n    }\n  ]\n};\n\nvar mapsJSON = {\n  chart: {\n    caption: 'Average Annual Population Growth',\n    subcaption: ' 1955-2015',\n    numbersuffix: '%',\n    includevalueinlabels: '1',\n    labelsepchar: ': ',\n    entityFillHoverColor: '#FFF9C4',\n    theme: 'fusion'\n  },\n  colorrange: {\n    minvalue: '0',\n    code: '#FFE0B2',\n    gradient: '1',\n    color: [\n      {\n        minvalue: '0.5',\n        maxvalue: '1.0',\n        color: '#FFD74D'\n      },\n      {\n        minvalue: '1.0',\n        maxvalue: '2.0',\n        color: '#FB8C00'\n      },\n      {\n        minvalue: '2.0',\n        maxvalue: '3.0',\n        color: '#E65100'\n      }\n    ]\n  },\n  data: [\n    {\n      id: 'NA',\n      value: '.82',\n      showLabel: '1'\n    },\n    {\n      id: 'SA',\n      value: '2.04',\n      showLabel: '1'\n    },\n    {\n      id: 'AS',\n      value: '1.78',\n      showLabel: '1'\n    },\n    {\n      id: 'EU',\n      value: '.40',\n      showLabel: '1'\n    },\n    {\n      id: 'AF',\n      value: '2.58',\n      showLabel: '1'\n    },\n    {\n      id: 'AU',\n      value: '1.30',\n      showLabel: '1'\n    }\n  ]\n};\n\nvar code1 =\n  \"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport FusionCharts from 'fusioncharts';\\nimport Charts from 'fusioncharts/fusioncharts.charts';\\nimport ReactFC from 'react-fusioncharts';\\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\\n\\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\\n\\nconst myDataSource = \" +\n  JSON.stringify(chartJSON, null, '\\t') +\n  \";\\n\\nconst chartConfigs = {\\n  \\ttype: 'column2d',\\n  \\twidth: 600,\\n  \\theight: 400,\\n  \\tdataFormat: 'json',\\n  \\tdataSource: myDataSource,\\n};\\n\\nReactDOM.render(\\n  \\t<ReactFC {...chartConfigs} />,\\n  \\tdocument.getElementById('root'),\\n);\";\nvar code2 =\n  \"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport FusionCharts from 'fusioncharts';\\nimport Maps from 'fusioncharts/fusioncharts.maps';\\nimport World from 'fusioncharts/maps/fusioncharts.world';\\nimport ReactFC from 'react-fusioncharts';\\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\\n\\nReactFC.fcRoot(FusionCharts, Maps, World, FusionTheme);\\n\\nconst myDataSource = \" +\n  JSON.stringify(mapsJSON, null, '\\t') +\n  \";\\n\\nconst chartConfigs = {\\n  \\ttype: 'world',\\n  \\twidth: 600,\\n  \\theight: 400,\\n  \\tdataFormat: 'json',\\n  \\tdataSource: myDataSource,\\n};\\n\\nReactDOM.render(\\n  \\t<ReactFC {...chartConfigs} />,\\n  \\tdocument.getElementById('root'),\\n);\";\nvar code3 =\n  \"import React, { Component } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport FusionCharts from 'fusioncharts';\\nimport Charts from 'fusioncharts/fusioncharts.charts';\\nimport ReactFC from 'react-fusioncharts';\\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\\n\\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\\n\\nconst myDataSource = \" +\n  JSON.stringify(chartJSON, null, '\\t') +\n  \";\\n\\nconst chartConfigs = {\\n  type: 'column2d',\\n  width: 600,\\n  height: 400,\\n  dataFormat: 'json',\\n  dataSource: myDataSource,\\n};\\n\\nclass Chart extends Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      actualValue: 'Hover on the plot to see the value along with the label',\\n    };\\n\\n    this.showPlotValue = this.showPlotValue.bind(this);\\n  }\\n\\n  // Event callback handler for 'dataplotRollOver'.\\n  // Shows the value of the hovered plot on the page.\\n  showPlotValue(eventObj, dataObj) {\\n    this.setState({\\n      actualValue: `You’re are currently hovering over ${dataObj.categoryLabel} whose value is ${dataObj.displayValue}`,\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <ReactFC {...chartConfigs} fcEvent-dataplotRollOver={this.showPlotValue} />\\n        <p style={{ padding: '10px', background: '#f5f2f0' }}>{this.state.actualValue}</p>\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(\\n  <Chart />,\\n  document.getElementById('root'),\\n);\";\nvar code4 =\n  \"import React, { Component } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport FusionCharts from 'fusioncharts';\\nimport Charts from 'fusioncharts/fusioncharts.charts';\\nimport ReactFC from 'react-fusioncharts';\\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\\n\\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\\n\\nconst myDataSource = \" +\n  JSON.stringify(chartJSON, null, '\\t') +\n  \";\\n\\nconst chartConfigs = {\\n  type: 'column2d',\\n  width: 600,\\n  height: 400,\\n  dataFormat: 'json',\\n  dataSource: myDataSource,\\n};\\n\\nclass Chart extends Component {\\n  // Convert the chart to a 2D Pie chart after 5 secs.\\n  alterChart(chart) {\\n    setTimeout(() => {\\n      chart.chartType('pie2d');\\n    }, 5000);\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <ReactFC {...chartConfigs} onRender={alterChart} />\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(\\n  <Chart />,\\n  document.getElementById('root'),\\n);\";\nvar code5 =\n  \"import React from 'react';\\nimport FusionCharts from 'fusioncharts';\\nimport TimeSeries from 'fusioncharts/fusioncharts.timeseries';\\nimport ReactFC from '../lib/ReactFC';\\n\\nReactFC.fcRoot(FusionCharts, TimeSeries);\\n\\nconst jsonify = res => res.json();\\nconst dataFetch = fetch(\\n  'https://raw.githubusercontent.com/fusioncharts/dev_centre_docs/master/assets/datasources/fusiontime/online-sales-single-series-area-data-plot/data.json'\\n).then(jsonify);\\nconst schemaFetch = fetch(\\n  'https://raw.githubusercontent.com/fusioncharts/dev_centre_docs/master/assets/datasources/fusiontime/online-sales-single-series-area-data-plot/schema.json'\\n).then(jsonify);\\n\\nclass ChartViewer extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.onFetchData = this.onFetchData.bind(this);\\n    this.state = {\\n      timeseriesDs: {\\n        type: 'timeseries',\\n        renderAt: 'container',\\n        width: '600',\\n        height: '400',\\n        dataSource: {\\n          caption: { text: 'Online Sales of a SuperStore in the US' },\\n          data: null,\\n          yAxis: [\\n            {\\n              plot: [\\n                {\\n                  value: 'Sales ($)'\\n                }\\n              ]\\n            }\\n          ]\\n        }\\n      }\\n    };\\n  }\\n\\n  componentDidMount() {\\n    this.onFetchData();\\n  }\\n\\n  onFetchData() {\\n    Promise.all([dataFetch, schemaFetch]).then(res => {\\n      const data = res[0];\\n      const schema = res[1];\\n      const fusionTable = new FusionCharts.DataStore().createDataTable(\\n        data,\\n        schema\\n      );\\n      const timeseriesDs = Object.assign({}, this.state.timeseriesDs);\\n      timeseriesDs.dataSource.data = fusionTable;\\n      this.setState({\\n        timeseriesDs\\n      });\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        {this.state.timeseriesDs.dataSource.data ? (\\n          <ReactFC {...this.state.timeseriesDs} />\\n        ) : (\\n          'loading'\\n        )}\\n      </div>\\n    );\\n  }\\n}\";\n\nclass Banner extends React.Component {\n  render() {\n    return (\n      <div className=\"container container-1200 info-wrapper pt-4\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"h2 mt-2\">Quick Start</div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 pt-3\">\n            <div className=\"h5\">\n              <span>\n                Step 1: Install the React-FusionCharts wrapper framework\n              </span>\n            </div>\n            <p className=\"code-desc\">\n              In the terminal run the following command:\n            </p>\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c1\">\n                      <CodeMirror\n                        value={'$ npm install react-fusioncharts --save'}\n                        options={options}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <p className=\"code-desc\">\n              Also install fusionCharts, if it is not already installed:\n            </p>\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c2\">\n                      <CodeMirror\n                        value={'$ npm install fusioncharts --save'}\n                        options={options}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 pt-3\">\n            <div className=\"h5\">\n              <span>\n                Step 2: Import the{' '}\n                <a\n                  href=\"//www.npmjs.com/package/react-fusioncharts\"\n                  target=\"_blank\"\n                >\n                  ReactFC\n                </a>{' '}\n                component\n              </span>\n            </div>\n            <p className=\"code-desc\">\n              After installing{' '}\n              <a\n                className=\"ref-link\"\n                href=\"//www.npmjs.com/package/react-fusioncharts\"\n                target=\"_blank\"\n              >\n                react-fusioncharts\n              </a>\n              , import it in your React app:\n            </p>\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c3\">\n                      <CodeMirror value={code1} options={options} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row pt-3\">\n          <div className=\"col\">\n            <div className=\"h3 mt-2\">Render FusionMaps</div>\n          </div>\n        </div>\n        <p className=\"code-desc\">\n          To render a map, import the FusionMaps module along with the map\n          definition.\n        </p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c4\">\n                      <CodeMirror value={code2} options={options} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row pt-3\">\n          <div className=\"col\">\n            <div className=\"h3 mt-2\">Working with Events</div>\n          </div>\n        </div>\n        <p className=\"code-desc mb-1\">\n          To attach event callbacks to a FusionCharts component, follow the\n          pattern below.\n        </p>\n        <p className=\"code-desc mb-1\">Write the callback:</p>\n        <p className=\"code-desc mb-0\">As a separate function:</p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c5\">\n                      <CodeMirror\n                        value={\n                          'var chartEventCallback  = function (eventObj, dataObj) {\\n  [Code goes here]\\n}'\n                        }\n                        options={options}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <p className=\"code-desc mb-0 mt-2\">Or, as a component class method:</p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c6\">\n                      <CodeMirror\n                        value={\n                          'chartEventCallback (eventObj, dataObj) {\\n  [Code goes here]\\n}'\n                        }\n                        options={options}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <p className=\"code-desc mb-0 mt-2\">\n          Attach the callback to an event through the React-FC component:\n        </p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c7\">\n                      <CodeMirror\n                        value={\n                          '<ReactFC {...chartConfigs} fcEvent-EVENTNAME={this.chartEventCallback} />'\n                        }\n                        options={options}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <p className=\"code-desc\">\n          Where, EVENTNAME is to be replaced by the event you want to track.\n        </p>\n        <div className=\"h6\">\n          Consider the example below that tracks hover events on a data plot.\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c8\">\n                      <CodeMirror value={code3} options={options} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row pt-3\">\n          <div className=\"col\">\n            <div className=\"h3 mt-2\">Working with APIs</div>\n          </div>\n        </div>\n        <p className=\"code-desc mb-1\">\n          To call APIs we will need the chart object. To get the chart object\n          for an React-FC component, pass a callback through the attribute\n          onRender.\n        </p>\n        <p className=\"code-desc mb-1\">Write the callback:</p>\n        <p className=\"code-desc mb-0\">As a separate function:</p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c9\">\n                      <CodeMirror\n                        value={\n                          'var chartRenderCallback  = function (chart) {\\n  [Code goes here]\\n}'\n                        }\n                        options={options}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <p className=\"code-desc mb-0 mt-2\">Or, as a component class method:</p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c10\">\n                      <CodeMirror\n                        value={\n                          'chartRenderCallback (chart) {\\n  [Code goes here]\\n}'\n                        }\n                        options={options}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <p className=\"code-desc mb-0 mt-2\">\n          Pass the callback as a prop, to which the chart object will be\n          returned on rendering:\n        </p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c11\">\n                      <CodeMirror\n                        value={\n                          '<ReactFC {...chartConfigs} onRender={chartRenderCallback} />'\n                        }\n                        options={options}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"h6 mt-2\">\n          Consider the example below that converts a Column 2D chart to a Pie 2D\n          chart after 5 seconds.\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c12\">\n                      <CodeMirror value={code4} options={options} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row pt-3\">\n          <div className=\"col\">\n            <div className=\"h3 mt-2\">Usage and integration of FusionTime</div>\n          </div>\n        </div>\n        <p className=\"code-desc\">\n          From <span className=\"code\">fusioncharts@3.13.3-sr.1</span> and{' '}\n          <span className=\"code\">react-fusioncharts@3.0.0</span>, You can\n          visualize timeseries data easily on react.\n        </p>\n        <div className=\"h6 mt-2\">\n          Consider the example below for integration of FusionTime\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c4\">\n                      <CodeMirror value={code5} options={options} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-12 pt-3\">\n            <div className=\"h5\">Support</div>\n            <p>\n              <a\n                className=\"ref-link\"\n                href=\"//github.com/fusioncharts/react-fusioncharts-component/issues\"\n                target=\"_blank\"\n              >\n                GitHub Issues\n              </a>\n              &nbsp;|&nbsp;\n              <a\n                className=\"ref-link\"\n                href=\"mailto:support@fusioncharts.com\"\n                target=\"_blank\"\n              >\n                Contact FusionCharts Support\n              </a>\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 pt-3\">\n            <div className=\"h5\">Licensing</div>\n            <p>\n              React-FusionCharts module is licensed under open-source,\n              distributed under the terms of the MIT/X11 License. You will still\n              need to include FusionCharts in your page, as this project\n              provides no direct functionality. You can download a free\n              evaluation version&nbsp;\n              <a\n                className=\"ref-link\"\n                href=\"//www.fusioncharts.com/download/\"\n                target=\"_blank\"\n              >\n                here\n              </a>\n              . To use in a commercial environment, please&nbsp;\n              <a\n                className=\"ref-link\"\n                href=\"//www.fusioncharts.com/buy/\"\n                target=\"_blank\"\n              >\n                purchase a FusionCharts license\n              </a>\n              .\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Banner;\n","import React, { Component } from 'react';\nimport 'prismjs/prism.js';\nimport 'prismjs/themes/prism.css';\n\nclass Footer extends Component {\n  render () {\n    return (\n        <div className=\"\">\n            <div id=\"footbar\" className=\"text-center mt-2\">\n                <div className=\"col-12\">\n                    <p className=\"foot-item pt-4\">© 2002-2018 InfoSoft Global Private Limited. All Rights Reserved.</p>\n                </div>\n            </div>\n        </div>\n    )\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport CodeMirror from 'react-codemirror';\nimport 'codemirror/mode/javascript/javascript';\n\nvar options = {\n  tabSize: '4',\n  smartIndent: true,\n  lineNumbers: true,\n  readOnly: true,\n  theme: 'dracula',\n  mode: 'javascript',\n  viewportMargin: Infinity\n};\n\nvar chartJSON = {\n  chart: {\n    caption: 'Countries With Most Oil Reserves [2017-18]',\n    subCaption: 'In MMbbl = One Million barrels',\n    xAxisName: 'Country',\n    yAxisName: 'Reserves (MMbbl)',\n    numberSuffix: 'K',\n    theme: 'fusion'\n  },\n  data: [\n    {\n      label: 'Venezuela',\n      value: '290'\n    },\n    {\n      label: 'Saudi',\n      value: '260'\n    },\n    {\n      label: 'Canada',\n      value: '180'\n    },\n    {\n      label: 'Iran',\n      value: '140'\n    },\n    {\n      label: 'Russia',\n      value: '115'\n    },\n    {\n      label: 'UAE',\n      value: '100'\n    },\n    {\n      label: 'US',\n      value: '30'\n    },\n    {\n      label: 'China',\n      value: '30'\n    }\n  ]\n};\n\nvar mapsJSON = {\n  chart: {\n    caption: 'Average Annual Population Growth',\n    subcaption: ' 1955-2015',\n    numbersuffix: '%',\n    includevalueinlabels: '1',\n    labelsepchar: ': ',\n    entityFillHoverColor: '#FFF9C4',\n    theme: 'fusion'\n  },\n  colorrange: {\n    minvalue: '0',\n    code: '#FFE0B2',\n    gradient: '1',\n    color: [\n      {\n        minvalue: '0.5',\n        maxvalue: '1.0',\n        color: '#FFD74D'\n      },\n      {\n        minvalue: '1.0',\n        maxvalue: '2.0',\n        color: '#FB8C00'\n      },\n      {\n        minvalue: '2.0',\n        maxvalue: '3.0',\n        color: '#E65100'\n      }\n    ]\n  },\n  data: [\n    {\n      id: 'NA',\n      value: '.82',\n      showLabel: '1'\n    },\n    {\n      id: 'SA',\n      value: '2.04',\n      showLabel: '1'\n    },\n    {\n      id: 'AS',\n      value: '1.78',\n      showLabel: '1'\n    },\n    {\n      id: 'EU',\n      value: '.40',\n      showLabel: '1'\n    },\n    {\n      id: 'AF',\n      value: '2.58',\n      showLabel: '1'\n    },\n    {\n      id: 'AU',\n      value: '1.30',\n      showLabel: '1'\n    }\n  ]\n};\n\nvar code1 =\n  \"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport FusionCharts from 'fusioncharts';\\nimport Charts from 'fusioncharts/fusioncharts.charts';\\nimport ReactFC from 'react-fusioncharts';\\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\\n\\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\\n\\nconst myDataSource = \" +\n  JSON.stringify(chartJSON, null, '\\t') +\n  \";\\n\\nconst chartConfigs = {\\n  \\ttype: 'column2d',\\n  \\twidth: 600,\\n  \\theight: 400,\\n  \\tdataFormat: 'json',\\n  \\tdataSource: myDataSource,\\n};\\n\\nReactDOM.render(\\n  \\t<ReactFC {...chartConfigs} />,\\n  \\tdocument.getElementById('root'),\\n);\";\nvar code2 =\n  \"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport FusionCharts from 'fusioncharts';\\nimport Maps from 'fusioncharts/fusioncharts.maps';\\nimport World from 'fusioncharts/maps/fusioncharts.world';\\nimport ReactFC from 'react-fusioncharts';\\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\\n\\nReactFC.fcRoot(FusionCharts, Maps, World, FusionTheme);\\n\\nconst myDataSource = \" +\n  JSON.stringify(mapsJSON, null, '\\t') +\n  \";\\n\\nconst chartConfigs = {\\n  \\ttype: 'world',\\n  \\twidth: 600,\\n  \\theight: 400,\\n  \\tdataFormat: 'json',\\n  \\tdataSource: myDataSource,\\n};\\n\\nReactDOM.render(\\n  \\t<ReactFC {...chartConfigs} />,\\n  \\tdocument.getElementById('root'),\\n);\";\nvar code3 =\n  \"import React, { Component } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport FusionCharts from 'fusioncharts';\\nimport Charts from 'fusioncharts/fusioncharts.charts';\\nimport ReactFC from 'react-fusioncharts';\\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\\n\\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\\n\\nconst myDataSource = \" +\n  JSON.stringify(chartJSON, null, '\\t') +\n  \";\\n\\nconst chartConfigs = {\\n  type: 'column2d',\\n  width: 600,\\n  height: 400,\\n  dataFormat: 'json',\\n  dataSource: myDataSource,\\n};\\n\\nclass Chart extends Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      actualValue: 'Hover on the plot to see the value along with the label',\\n    };\\n\\n    this.showPlotValue = this.showPlotValue.bind(this);\\n  }\\n\\n  // Event callback handler for 'dataplotRollOver'.\\n  // Shows the value of the hovered plot on the page.\\n  showPlotValue(eventObj, dataObj) {\\n    this.setState({\\n      actualValue: `You’re are currently hovering over ${dataObj.categoryLabel} whose value is ${dataObj.displayValue}`,\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <ReactFC {...chartConfigs} fcEvent-dataplotRollOver={this.showPlotValue} />\\n        <p style={{ padding: '10px', background: '#f5f2f0' }}>{this.state.actualValue}</p>\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(\\n  <Chart />,\\n  document.getElementById('root'),\\n);\";\nvar code4 =\n  \"import React, { Component } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport FusionCharts from 'fusioncharts';\\nimport Charts from 'fusioncharts/fusioncharts.charts';\\nimport ReactFC from 'react-fusioncharts';\\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\\n\\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\\n\\nconst myDataSource = \" +\n  JSON.stringify(chartJSON, null, '\\t') +\n  \";\\n\\nconst chartConfigs = {\\n  type: 'column2d',\\n  width: 600,\\n  height: 400,\\n  dataFormat: 'json',\\n  dataSource: myDataSource,\\n};\\n\\nclass Chart extends Component {\\n  // Convert the chart to a 2D Pie chart after 5 secs.\\n  alterChart(chart) {\\n    setTimeout(() => {\\n      chart.chartType('pie2d');\\n    }, 5000);\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <ReactFC {...chartConfigs} onRender={alterChart} />\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(\\n  <Chart />,\\n  document.getElementById('root'),\\n);\";\n\nclass BannerFusionCharts extends React.Component {\n  render() {\n    return (\n      <div className=\"container container-1200 info-wrapper pt-4\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"h2 mt-2\">Quick Start</div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 pt-3\">\n            <div className=\"h5\">\n              <span>\n                Step 1: Install the React-FusionCharts wrapper framework\n              </span>\n            </div>\n            <p className=\"code-desc\">\n              In the terminal run the following command:\n            </p>\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c1\">\n                      <CodeMirror\n                        value={'$ npm install react-fusioncharts --save'}\n                        options={options}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <p className=\"code-desc\">\n              Also install fusionCharts, if it is not already installed:\n            </p>\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c2\">\n                      <CodeMirror\n                        value={'$ npm install fusioncharts --save'}\n                        options={options}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 pt-3\">\n            <div className=\"h5\">\n              <span>\n                Step 2: Import the{' '}\n                <a\n                  href=\"//www.npmjs.com/package/react-fusioncharts\"\n                  target=\"_blank\"\n                >\n                  ReactFC\n                </a>{' '}\n                component\n              </span>\n            </div>\n            <p className=\"code-desc\">\n              After installing{' '}\n              <a\n                className=\"ref-link\"\n                href=\"//www.npmjs.com/package/react-fusioncharts\"\n                target=\"_blank\"\n              >\n                react-fusioncharts\n              </a>\n              , import it in your React app:\n            </p>\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c3\">\n                      <CodeMirror value={code1} options={options} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row pt-3\">\n          <div className=\"col\">\n            <div className=\"h3 mt-2\">Render FusionMaps</div>\n          </div>\n        </div>\n        <p className=\"code-desc\">\n          To render a map, import the FusionMaps module along with the map\n          definition.\n        </p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c4\">\n                      <CodeMirror value={code2} options={options} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row pt-3\">\n          <div className=\"col\">\n            <div className=\"h3 mt-2\">Working with Events</div>\n          </div>\n        </div>\n        <p className=\"code-desc mb-1\">\n          To attach event callbacks to a FusionCharts component, follow the\n          pattern below.\n        </p>\n        <p className=\"code-desc mb-1\">Write the callback:</p>\n        <p className=\"code-desc mb-0\">As a separate function:</p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c5\">\n                      <CodeMirror\n                        value={\n                          'var chartEventCallback  = function (eventObj, dataObj) {\\n  [Code goes here]\\n}'\n                        }\n                        options={options}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <p className=\"code-desc mb-0 mt-2\">Or, as a component class method:</p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c6\">\n                      <CodeMirror\n                        value={\n                          'chartEventCallback (eventObj, dataObj) {\\n  [Code goes here]\\n}'\n                        }\n                        options={options}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <p className=\"code-desc mb-0 mt-2\">\n          Attach the callback to an event through the React-FC component:\n        </p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c7\">\n                      <CodeMirror\n                        value={\n                          '<ReactFC {...chartConfigs} fcEvent-EVENTNAME={this.chartEventCallback} />'\n                        }\n                        options={options}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <p className=\"code-desc\">\n          Where, EVENTNAME is to be replaced by the event you want to track.\n        </p>\n        <div className=\"h6\">\n          Consider the example below that tracks hover events on a data plot.\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c8\">\n                      <CodeMirror value={code3} options={options} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row pt-3\">\n          <div className=\"col\">\n            <div className=\"h3 mt-2\">Working with APIs</div>\n          </div>\n        </div>\n        <p className=\"code-desc mb-1\">\n          To call APIs we will need the chart object. To get the chart object\n          for an React-FC component, pass a callback through the attribute\n          onRender.\n        </p>\n        <p className=\"code-desc mb-1\">Write the callback:</p>\n        <p className=\"code-desc mb-0\">As a separate function:</p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c9\">\n                      <CodeMirror\n                        value={\n                          'var chartRenderCallback  = function (chart) {\\n  [Code goes here]\\n}'\n                        }\n                        options={options}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <p className=\"code-desc mb-0 mt-2\">Or, as a component class method:</p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c10\">\n                      <CodeMirror\n                        value={\n                          'chartRenderCallback (chart) {\\n  [Code goes here]\\n}'\n                        }\n                        options={options}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <p className=\"code-desc mb-0 mt-2\">\n          Pass the callback as a prop, to which the chart object will be\n          returned on rendering:\n        </p>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c11\">\n                      <CodeMirror\n                        value={\n                          '<ReactFC {...chartConfigs} onRender={chartRenderCallback} />'\n                        }\n                        options={options}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"h6 mt-2\">\n          Consider the example below that converts a Column 2D chart to a Pie 2D\n          chart after 5 seconds.\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"code-view mt-2\">\n              <div className=\"card-shadow\">\n                <div className=\"card-body p-0\">\n                  <div className=\"code-panel\">\n                    <div className=\"codeMirrorDiv\" id=\"c12\">\n                      <CodeMirror value={code4} options={options} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-12 pt-3\">\n            <div className=\"h5\">Support</div>\n            <p>\n              <a\n                className=\"ref-link\"\n                href=\"//github.com/fusioncharts/react-fusioncharts-component/issues\"\n                target=\"_blank\"\n              >\n                GitHub Issues\n              </a>\n              &nbsp;|&nbsp;\n              <a\n                className=\"ref-link\"\n                href=\"mailto:support@fusioncharts.com\"\n                target=\"_blank\"\n              >\n                Contact FusionCharts Support\n              </a>\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 pt-3\">\n            <div className=\"h5\">Licensing</div>\n            <p>\n              React-FusionCharts module is licensed under open-source,\n              distributed under the terms of the MIT/X11 License. You will still\n              need to include FusionCharts in your page, as this project\n              provides no direct functionality. You can download a free\n              evaluation version&nbsp;\n              <a\n                className=\"ref-link\"\n                href=\"//www.fusioncharts.com/download/\"\n                target=\"_blank\"\n              >\n                here\n              </a>\n              . To use in a commercial environment, please&nbsp;\n              <a\n                className=\"ref-link\"\n                href=\"//www.fusioncharts.com/buy/\"\n                target=\"_blank\"\n              >\n                purchase a FusionCharts license\n              </a>\n              .\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BannerFusionCharts;\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport Banner from './Banner';\nimport Feature from './Feature';\nimport Samples from './Samples';\nimport Info from './Info';\nimport Footer from './Footer';\nimport InfoFusionCharts from './Info/FusionChartsInfo';\n\nimport '../assets/css/codemirror.css';\nimport '../assets/css/dracula.css';\n\n// import logo from './logo.svg';\nimport './App.css';\n// import 'bootstrap/dist/css/bootstrap.css';\nimport 'prismjs/prism.js';\nimport 'prismjs/themes/prism.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"page-container\">\n          <Banner />\n          <Feature />\n          <Samples />\n          <Info />\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/style.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/fc-logo.d427d93d.svg\";","module.exports = __webpack_public_path__ + \"static/media/react.76dba382.svg\";","module.exports = __webpack_public_path__ + \"static/media/fc-min-logo.23ef571a.svg\";"],"sourceRoot":""}